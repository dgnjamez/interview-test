{"version":3,"sources":["layout/layout.tsx","lib/form-validate.ts","views/form.tsx","views/pokemon.tsx","views/function.tsx","router/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Layout","props","location","useLocation","className","to","pathname","children","validateEmpty","text","track","status","trim","msg","validateMatch","text1","text2","track1","track2","validateEmail","mail","test","minMax","range","length","Form","state","validate","result","firstname","lastname","email","password","verfy_pass","gender","saveUser","setState","this","htmlFor","name","placeholder","value","onChange","e","target","type","style","padding","width","onClick","paddingLeft","React","Component","Pokemon","useState","Array","fill","list","setList","useEffect","fetch","then","res","json","a","results","i","data","image","sprites","front_default","rel","href","map","item","key","background","Function","order","setOrder","targetData","jsonFile","filter","shop","orders","findAmount","val","index","all","findIndex","id","found","amount","reduce","b","JSON","stringify","price","Router","exact","path","render","component","App","basename","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8133948.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport '../style/layout.scss'\r\n\r\ntype Props = {\r\n    children: React.ReactNode\r\n};\r\n\r\nconst Layout: React.FC<Props> = props =>{\r\n    let location = useLocation();\r\n\r\n    return  (\r\n        <div className=\"layout\">\r\n            <div className=\"navbar\">\r\n                <div className=\"nav-header\">Frontend Development Exams</div>\r\n                <div className=\"nav-list\">\r\n                    <Link to={`/form`} className={`btn ${location.pathname === '/form' ? 'btn-primary' : 'btn-light'} m-1`}>Forms</Link>\r\n                    <Link to={`/pokemon`} className={`btn ${location.pathname === '/pokemon' ? 'btn-primary' : 'btn-light'} m-1`}>Pokemon's</Link>\r\n                    <Link to={`/order`} className={`btn ${location.pathname === '/order' ? 'btn-primary' : 'btn-light'} m-1`}>Function</Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"wraper\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;","export function validateEmpty(text: string = '', track: string = 'This field') {\r\n    return {\r\n        status: !text.trim(),\r\n        msg: !text.trim() ? `${track} is required` : ''\r\n    }\r\n}\r\n\r\nexport function validateMatch(text1: string = '', text2: string = '', track1: string = 'Field 1', track2: string = 'Field 2') {\r\n    return {\r\n        status: !(text1.trim() && text2.trim() && text1.trim() === text2.trim()),\r\n        msg: (!text1.trim() || !text2.trim()) ? `${track1 === 'Field 1' ? 'This field' : track1} is required` : text1.trim() !== text2.trim() ? `${track1} unmatch with ${track2}` : ''\r\n    }\r\n}\r\n\r\nexport function validateEmail(text: string = '', track: string = 'This field') {\r\n    // eslint-disable-next-line\r\n    const mail = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return {\r\n        status: !mail.test(text.trim()),\r\n        msg: !text.trim() ? `${track} is required` : !mail.test(text.trim()) ? `${track} is invalid email address` : ''\r\n    }\r\n}\r\n\r\nexport function min(text: string = '', range: number = 0, track: string = 'This field') {\r\n    return {\r\n        status: !(text.trim().length < range),\r\n        msg: !text.trim() ? `${track} is required` : text.trim().length < range ? `The shortest digits is ${range}` : ''\r\n    }\r\n}\r\n\r\nexport function max(text: string = '', range: number = 0, track: string = 'This field') {\r\n    return {\r\n        status: !(text.trim().length > range),\r\n        msg: !text.trim() ? `${track} is required` : text.trim().length > range ? `The longest digits is ${range}` : ''\r\n    }\r\n}\r\n\r\nexport function minMax(text: string = '', range: Array<number> = [0,0], track: string = 'This field') {\r\n    return {\r\n        status: text.trim().length < range[0] || text.trim().length > range[1],\r\n        msg: !text.trim() ? `${track} is required` : text.trim().length < range[0] || text.trim().length > range[1] ? `${track} should sin range of ${range[0]} to ${range[1]} digits` : ''\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    validateEmpty,\r\n    validateEmail,\r\n    validateMatch,\r\n    minMax\r\n} from '../lib/form-validate'\r\nimport '../style/form.scss'\r\n\r\ntype MyProps = {};\r\n\r\ntype MyState = {\r\n    validate: boolean;\r\n    result: boolean;\r\n    firstname?: string;\r\n    lastname?: string;\r\n    email?: string;\r\n    password?: string;\r\n    verfy_pass?: string;\r\n    gender?: string;\r\n};\r\n\r\nclass Form extends React.Component<MyProps, MyState> {\r\n    state: MyState = {\r\n        validate: false,\r\n        result: false,\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        password: '',\r\n        verfy_pass: '',\r\n        gender: ''\r\n    };\r\n\r\n    saveUser = (): any => {\r\n        this.setState({validate: true, result: false}, (): any => {\r\n            if (\r\n                !validateEmpty(this.state.firstname).status &&\r\n                !validateEmpty(this.state.lastname).status &&\r\n                !validateEmpty(this.state.gender).status &&\r\n                !validateEmail(this.state.email).status &&\r\n                !validateMatch(this.state.verfy_pass, this.state.password).status &&\r\n                !minMax(this.state.password, [6, 12]).status\r\n            ) {\r\n                this.setState({result: true})\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { validate, firstname, lastname, email, password, verfy_pass, gender, result } = this.state;\r\n        return (\r\n            <div className=\"form container px-1 pt-4 pb-0\">\r\n                <div className=\"form-card py-2 px-4\">\r\n                    <div className=\"form-header w-full mt-1 mb-5\">Form and validation</div>\r\n                    <div className=\"form-group mb-4\">\r\n                        <label htmlFor=\"firstname\" className={`px-2 ${validate && validateEmpty(firstname).status ? 'is-invalid' : ''}`}>First Name</label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                name=\"firstname\"\r\n                                className={`form-control ${validate && validateEmpty(firstname).status ? 'is-invalid' : ''}`}\r\n                                placeholder=\"Please fill first name\"\r\n                                value={firstname}\r\n                                onChange={(e) => this.setState({firstname: e.target.value})}\r\n                            />\r\n                            {validate ? <small>{validateEmpty(firstname).msg}</small> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-4\">\r\n                        <label htmlFor=\"lastname\" className={`px-2 ${validate && validateEmpty(lastname).status ? 'is-invalid' : ''}`}>Last Name</label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                name=\"lastname\"\r\n                                className={`form-control ${validate && validateEmpty(lastname).status ? 'is-invalid' : ''}`}\r\n                                placeholder=\"Please fill last name\"\r\n                                value={lastname}\r\n                                onChange={(e) => this.setState({lastname: e.target.value})}\r\n                            />\r\n                            {validate ? <small>{validateEmpty(lastname).msg}</small> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-4\">\r\n                        <label htmlFor=\"email\" className={`px-2 ${validate && validateEmail(email).status ? 'is-invalid' : ''}`}>E-mail</label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                className={`form-control ${validate && validateEmail(email).status ? 'is-invalid' : ''}`}\r\n                                placeholder=\"Please fill email\"\r\n                                value={email}\r\n                                onChange={(e) => this.setState({email: e.target.value})}\r\n                            />\r\n                            {validate ? <small>{validateEmail(email).msg}</small> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-4\">\r\n                        <label htmlFor=\"password\" className={`px-2 ${validate && minMax(password, [6, 12]).status ? 'is-invalid' : ''}`}>Password</label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className={`form-control ${validate && minMax(password, [6, 12]).status ? 'is-invalid' : ''}`}\r\n                                placeholder=\"Please fill password\"\r\n                                value={password}\r\n                                onChange={(e) => this.setState({password: e.target.value})}\r\n                            />\r\n                            {validate ? <small>{minMax(password, [6, 12]).msg}</small> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-4\">\r\n                        <label htmlFor=\"verfy_pass\" className={`px-2 ${validate && validateMatch(verfy_pass, password).status ? 'is-invalid' : ''}`}>Verify Password</label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                name=\"verfy_pass\"\r\n                                type=\"password\"\r\n                                className={`form-control ${validate && validateMatch(verfy_pass, password).status ? 'is-invalid' : ''}`}\r\n                                placeholder=\"Please fill verify password\"\r\n                                value={verfy_pass}\r\n                                onChange={(e) => this.setState({verfy_pass: e.target.value})}\r\n                            />\r\n                            {validate ? <small>{validateMatch(verfy_pass, password).msg}</small> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-4\">\r\n                        <label htmlFor=\"gender\" className={`px-2 ${validate && validateEmpty(gender).status ? 'is-invalid' : ''}`}>Gender</label>\r\n                        <div className=\"input-group\">\r\n                            <select\r\n                                name=\"gender\"\r\n                                className={`form-control ${validate && validateEmpty(gender).status ? 'is-invalid' : ''}`}\r\n                                value={gender}\r\n                                onChange={(e) => this.setState({gender: e.target.value})}\r\n                            >\r\n                                <option value=\"\">Please select gender</option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                            {validate ? <small>{validateEmpty(gender).msg}</small> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-2\">\r\n                        <label></label>\r\n                        <div className=\"input-group\" style={{padding:'0 2rem'}}>\r\n                            <button className=\"btn btn-success\" style={{width:'fit-content'}} onClick={this.saveUser}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        result ?\r\n                        <div className=\"form-group mb-2\">\r\n                            <label></label>\r\n                            <div className=\"input-group\" style={{paddingLeft:'2rem'}}>\r\n                                <div className=\"result-content p-2\">\r\n                                    <div className=\"header pb-1\">Result</div>\r\n                                    <div className=\"data-list pt-2\">\r\n                                        <div className=\"item\">First Name: {firstname}</div>\r\n                                        <div className=\"item\">Last Name : {lastname}</div>\r\n                                        <div className=\"item\">E-mail : {email}</div>\r\n                                        <div className=\"item\">Gender : {gender}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>:null\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form","import React, {useState, useEffect} from 'react';\r\nimport '../style/pokemon.scss'\r\n\r\ntype Props = {};\r\n\r\nconst Pokemon: React.FC<Props> = (props) =>{\r\n    const [list, setList] = useState(new Array(104).fill(null));\r\n\r\n    useEffect(() => {\r\n        fetch('https://pokeapi.co/api/v2/pokemon?offset=0&limit=104')\r\n        .then(res => res.json())\r\n        .then(async (res) => {\r\n            for (let i in res.results) {\r\n                const data = await (await fetch(`https://pokeapi.co/api/v2/pokemon-form/${(+i) + 1}`)).json()\r\n\r\n                res.results[i] = { name: data.name, image: data.sprites.front_default }\r\n            }\r\n\r\n            return setList(res.results)\r\n        })\r\n    })\r\n\r\n    return (\r\n        <div className=\"poke container\">\r\n            <div className=\"header mt-6 mb-4\">fetch pokemon's data จาก <a rel=\"noreferrer\" target=\"_blank\" href=\"https://pokeapi.co/api/v2\">https://pokeapi.co/api/v2</a></div>\r\n            <div className=\"poke-content\">\r\n                {list.map((item, key) => {\r\n                    return (\r\n                        <div key={key} className=\"col-2 col-md-4 col-sm-12\">\r\n                            <div className=\"poke-card\">\r\n                                <div className=\"poke-img mb-2\" style={item ? {background: `no-repeat url(${item.image}) center`} : {}}></div>\r\n                                <div className={`poke-title mb-1 ${!item ? 'no-title' : ''}`}>{item ? item.name : ''}</div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon","import React, {useState, useEffect} from 'react';\r\nimport jsonFile from '../assets/data.json'\r\nimport '../style/function.scss'\r\n\r\ntype Props = {};\r\n\r\nconst Function: React.FC<Props> = (props) => {\r\n    const [order, setOrder] = useState(new Array());\r\n\r\n    useEffect(() => {\r\n        if (order.length <= 0) {\r\n            var targetData = jsonFile.filter(i => i.shop === 1)\r\n            var orders: Array<any> = [];\r\n\r\n            for (let i in targetData) {\r\n                orders = [...orders, ...targetData[i].data]\r\n            }\r\n\r\n            orders = findAmount(orders)\r\n\r\n            orders = orders.filter((val, index, all) => {\r\n                return all.findIndex(item => (item.id === val.id)) === index // findIndex always get first match to compare with current index\r\n            })\r\n\r\n            setOrder(orders);\r\n        }\r\n    })\r\n\r\n    const findAmount = (orders:Array<any>) => {\r\n        for (let i in orders) {\r\n            let found = orders.filter(item => orders[i].id === item.id)\r\n            orders[i].amount = found.map(i => i.order.amount).reduce((a, b) => a + b, 0);\r\n        }\r\n\r\n        return orders\r\n    }\r\n\r\n    return (\r\n        <div className=\"func container px-1 pb-0\">\r\n            <pre className=\"order-list p-2\">\r\n                {JSON.stringify(\r\n                    order.map(i => ({id: i.id, name: i.name, price: i.price, amount: i.amount}))\r\n                , null, 2)}\r\n            </pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Function;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Form from '../views/form'\r\nimport Pokemon from '../views/pokemon'\r\nimport Function from '../views/function'\r\n\r\nconst Router: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() => (<Redirect to=\"/form\" />)} />\r\n            <Route path=\"/form\" component={Form} />\r\n            <Route path=\"/pokemon\" component={Pokemon} />\r\n            <Route path=\"/order\" component={Function} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Router;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport Layout from './layout/layout'\nimport Router from './router'\nimport './style/app.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={'/interview-test'}>\n        <Layout>\n          <Router/>\n        </Layout>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}